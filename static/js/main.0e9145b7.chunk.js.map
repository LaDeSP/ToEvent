{"version":3,"sources":["components/utils/localStorage.js","components/shared/container/main.jsx","components/shared/modal/button.jsx","components/shared/markdown/index.jsx","components/constant.jsx","components/auth/error.jsx","components/shared/modal/modal.jsx","components/utils/dictionary.js","components/utils/document.js","components/utils/auth.jsx","components/auth/input.jsx","components/auth/submit.jsx","components/shared/loading.jsx","components/utils/firebaseUtils.js","components/services/firebaseService.js","components/utils/email.js","components/auth/auth.js","components/auth/login/index.jsx","components/auth/select.jsx","components/auth/textarea.jsx","components/auth/inscription/index.jsx","components/about/index.jsx","components/description/index.jsx","components/activeties/effects.js","components/activeties/list/list.jsx","components/activeties/list/item.jsx","components/activeties/registered.jsx","components/activeties/support.jsx","components/activeties/administrator.jsx","components/qrCode/show.jsx","components/auth/changePassword/index.jsx","components/qrCode/effects.js","components/qrCode/reader.jsx","components/activeties/plusVacancy/plusVacancy.jsx","components/supportList/effects.js","components/supportList/supportList.jsx","components/auth/supportUserInscription/index.jsx","components/route/user.jsx","components/route/route.jsx","components/App.js","serviceWorker.js","index.js"],"names":["LoadApplicationState","key","value","localStorage","getItem","JSON","parse","Load","Main","props","react_default","a","createElement","className","children","ModalButton","type","data-toggle","data-target","target","Markdown","False","Void","undefined","Null","InitialInput","Nothing","InscriptionType","Error","isSuccess","message","Modal","id","tabIndex","role","aria-labelledby","aria-hidden","concat","data-dismiss","dictionary","name","PT-BR","objectToArray","object","Object","values","downloadCsv","data","text","file","download","replaceAll","needle","replacement","split","join","dataToCsv","callback","converter","json2csv","err","csv","forEach","word","processingCsv","isEmail","email","test","String","toLowerCase","isPassword","password","isNothing","isRga","length","checkForm","is","index","Input","isValid","inputValidation","isVoid","placeholder","onChange","required","validMessage","invalidMessage","htmlFor","Submit","error","Loading","isLoading","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","FirebaseService","getOneData","_callee","path","query","_len","child","_key","snapshot","_args","arguments","regenerator_default","wrap","_context","prev","next","ref","Array","item","once","sent","val","abrupt","stop","listenIfChildAdded","on","insertData","form","_len2","_key2","set","removeData","_len3","_key3","remove","updateData","_len4","_key4","transaction","sendEmail","_ref","asyncToGenerator","mark","response","axios","get","status","t0","_x","_x2","apply","this","doLogin","user","success","rga","md5","doInscription","_ref2","_callee2","_context2","objectSpread","changePassword","_ref3","_callee3","_context3","_x3","_x4","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loginState","handleSubmit","bind","assertThisInitialized","rgaChange","passwordChange","LoadingOn","LoadingOff","closeModal","loginSuccess","event","setState","document","querySelector","click","history","push","preventDefault","setItem","stringify","setTimeout","modal","onSubmit","loading_Loading","input_Input","error_Error","submit_Submit","Component","Select","Option","Textarea","rows","isSuccessSubmit","inscriptionState","isName","isCourse","isContact","isEmergencyContact","course","contact","emergencyContact","group","gender","ethnicity","arrivalDate","departureDate","allergy","deficiency","nameChange","emailChange","courseChange","contactChange","emergencyContactChange","inputChange","submitError","submitDefault","checked","defineProperty","doInscriptionResponse","select_Select","select_Option","textarea_Textarea","About","src","process","alt","Description","isLoggedIn","location","pathname","main","modal_button","markdown","login_Login","inscription_Login","about","getActiveties","activeties","getUserActiveties","getUsers","users","activityInscription","_ref4","_callee4","activity","formInscription","formUser","hasInserted","activityName","_context4","inscription","presence","vacancies","removeActivityInscription","_ref5","_callee5","hasRemoved","_context5","_x5","_x6","updateIncrementVacanciesActivity","_ref7","_callee7","_context7","_x8","updateVacanciesActivity","_ref8","_callee8","hasUpdated","_context8","parseInt","_x9","_x10","ListGroup","ListGroupContent","ItemGroup","itemId","contentId","href","aria-controls","title","hasInscription","ItemGroupContent","inscriptionButton","onClick","reload","description","resume","pergunta","ItemGroupContentSupport","listUsers","map","scope","Link","to","match","url","ItemGroupContentAdministrator","exportToCsv","handleActivity","ActivetiesRegistered","renderActivies","myActiveties","_this2","hasActiveties","itemGroup","item_ItemGroup","itemGroupContent","item_ItemGroupContent","list_ListGroup","list_ListGroupContent","ActivetiesSupport","item_ItemGroupContentSupport","ActivetiesAdministrator","activitySelected","exportUsersToCsv","usersFormated","filename","item_ItemGroupContentAdministrator","reloadingPage","ShowQrCode","ChangePassword","changePasswordState","newPassword","newPasswordConfirmation","activityType","console","log","Reader","presenceState","params","delay","startPresence","handleScan","lib_default","onError","handleError","onScan","style","width","PlusVacancy","changeVacancyState","plusVacancy","getSupportUsers","supportUsers","filter","deleteSupportUsers","SupportList","loadSupportUsers","deleteSupportUser","renderSupportUsers","SupportUserInscription","changeSupportUserInscriptionState","UserRoute","quit","registered","support","administrator","removeItem","aria-expanded","aria-label","Route","exact","render","registered_ActivetiesRegistered","assign","show","changePassword_ChangePassword","_this3","support_ActivetiesSupport","reader_Reader","_this4","administrator_ActivetiesAdministrator","supportList_SupportList","plusVacancy_PlusVacancy","supportUserInscription_SupportUserInscription","Redirect","Router","loadData","BrowserRouter","Switch","description_Description","user_UserRoute","App","route","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","src_components_App","getElementById","URL","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e9145b7.chunk.js","sourcesContent":["export const Save = (data) => {\n    localStorage.setItem(\"state\", JSON.stringify(data))\n}\n\nexport const Load = (key) => {\n    var value = localStorage.getItem(key)\n    return JSON.parse(value)\n}\n\nexport const LoadApplicationState = () => {\n    var key = 'state'\n    return Load(key)\n}\n\nexport const RemoveApplicationState = () => {\n    var key = 'state'\n    localStorage.removeItem(key);\n}","import React from 'react'\n\nconst Main = (props) => {\n    return (\n        <div className=\"container mt-5 mb-5\">\n            <div className=\"row justify-content-center\">\n                { props.children }\n            </div>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react'\n\nconst ModalButton = (props) => {\n    return (\n        <button type=\"button\" className=\"btn btn-outline-primary m-2\" data-toggle=\"modal\" data-target={ props.target }>\n            { props.children }\n        </button>\n    )\n}\n\nexport default ModalButton","import React from 'react'\n\nconst Markdown = (props) => {\n    return (\n        <div className=\"markdown p-3\">\n            <h1> <strong>XVII InterPET – Encontro dos Grupos do Programa de Educação Tutorial da UFMS de 15 a 16 de novembro/2019.</strong> </h1>\n            <p>\n            O <strong>XVII InterPET - Encontro dos Grupos do Programa de Educação Tutorial da UFMS</strong> acontece nos dias 15 e 16 de novembro, no Câmpus do Pantanal, e tem como tema: \"Grupos de Programa de Educação Tutorial e o compromisso com os Objetivos de Desenvolvimento Sustentável (ODS) da ONU\".\n            </p>\n            <p>\n            O InterPET é um evento orientado por procedimentos e estratégias metodológicas definidas pela Comissão Executiva Nacional do PET - CENAPET, que consiste na realização de palestra, conferência, mesa-redonda/grupos de discussão e trabalho (GDT), reuniões de tutores e de petianos, e assembleia geral.\n            </p>\n            <p>\n            Os ODS são 17 metas propostas pela ONU que fazem parte da Agenda 2030 e abrangem diferentes temas que tratam do desenvolvimento social e econômico, como pobreza, fome, saúde, educação, aquecimento global, igualdade de gênero, água, saneamento, energia, urbanização, meio ambiente e justiça social.\n            </p>\n            <p>\n            Os Grupos PET realizam atividades de ensino, pesquisa e extensão, contribuindo com a formação dos acadêmicos participantes e com a promoção de melhorias nos cursos de graduação em que atuam. O desenvolvimento técnico-científico e sócio-cultural dos petianos é também frequentemente compartilhado com o público externo à Universidade, através de serviços, produtos e saberes. \n            </p>\n            <p>\n            Considerando a relevância das propostas da ONU e a caracterização dos compromissos do PET frente à sociedade, faz-se necessário compartilhar ações que os Grupos têm realizado e discutir de que forma estas podem contribuir para o cumprimento dos Objetivos.\n            </p>\n            <ul>\n                <li> \n                GDT - 1: “Grupos PET e a produção de inovação\"\n                <p>\n                Este grupo de discussão e trabalho tem como proposta o debate sobre a produção acadêmica e científica, que leva cada vez mais em consideração a produção de inovação. Nesse contexto, os grupos PET, que articulam ensino, pesquisa e extensão, devem considerar a inovação em suas atividades. \n                <p><strong>Pergunta motivadora:</strong> Como é possível conciliar os grupos PET e a produção de inovação?</p>\n                </p>\n                </li>\n                <li> \n                GDT - 2: “Formação preparatória e continuada de petianos e tutores\"\n                <p>\n                O presente grupo de discussão e trabalho tem como meta propiciar a reflexão e debate sobre a importância da formação preparatória e continuada de petianos e seustutores, acerca do conjunto de leis que amparam a existência dos grupos, o Manual de Orientações e os documentos produzidos pelo CENAPET, analisando de que forma essa estratégia pode subsidiar os fundamentos do Programa, fortalecendo a sua manutenção.\n                <p><strong>Pergunta motivadora:</strong> De que maneira a formação preparatória e continuada de petianos e tutores pode contribuir para o fortalecimento dos grupos ?</p>\n                </p>\n                </li>\n                <li> \n                GDT - 3: \"Grupos PET: atividades interdisciplinares e integradoras\"\n                <p>\n                O presente grupo de discussão e trabalho tem por objetivo debater sobre o processo interdisciplinar entre os diversos grupos PET e seus cursos, possibilitando uma reflexão sobre as atividades que estão sendo executadas e as contribuições da integração para os grupos.                \n                <p><strong>Pergunta motivadora:</strong> Como favorecer atividades interdisciplinares e integradoras nos grupos PET?</p>\n                </p>\n                </li>\n                <li> \n                GDT - 4: \"Grupos PET: resultados, sistematização e produção de indicadores\"\n                <p>\n                Este grupo de discussão e trabalho tem como meta propor um diálogo acerca da sistematização de atividades e ações dos Grupos, que podem permitir o desenvolvimento de uma base de dados comum, que reúna os principais resultados alcançados com o desenvolvimento de cada uma das atividades, de forma que isso configure um conjunto de indicadores de produção dos grupos PET da UFMS.                \n                <p><strong>Pergunta motivadora:</strong> desenvolvimento de uma base de dados comum aos Grupos PET, que contenha resultados de atividades por eles desenvolvidas, se mostra viável/relevante? </p>\n                </p>\n                </li>\n                <li> \n                GDT - 5: \"Grupos PET e compromisso social\"\n                <p>\n                O grupo de discussão e trabalho tem o intuito de fomentar o debate a respeito de como se dão as ações dos grupos PET quanto ao compartilhamento de saberes e serviços desenvolvidos pela universidade com a comunidade externa, tendo em vista as demandas sociais.                \n                <p><strong>Pergunta motivadora:</strong> Como as ações desenvolvidas pelos grupos PETs têm considerado o compromisso social? </p>\n                </p>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Markdown","export const True = true\nexport const False = false\nexport const Void = undefined\nexport const Null = null\nexport const InitialInput = ''\nexport const Invalid = 'is-invalid'\nexport const Valid = 'is-valid'\nexport const Nothing = ''\nexport const InscriptionType = 'REGISTERED'","import React from 'react'\n\nimport { False, True, Null } from '../constant'\n\nexport const Error = (props) => {\n    if(props.isSuccess === False){\n        return <span className=\"badge badge-danger\"> { props.message } </span>\n    } else {\n        if(props.isSuccess === True) return <span className=\"badge badge-success\"> { props.message } </span>\n    }\n    return Null\n}","import React from 'react'\n\nconst Modal = (props) => {\n    return (\n        <div className=\"modal fade\" id={ props.id } tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog bg-white rounded\" role=\"document\">\n                <div className=\"modal-content login d-flex py-5\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-9 col-lg-9 mx-auto\">\n                                { props.children }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button id={ `close${ props.id }` } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal","const dictionary = [\n    { name: 'description', 'PT-BR': 'Descrição' },\n    { name: 'activityDescription', 'PT-BR': 'Descrição da Atividade' },\n    { name: 'name', 'PT-BR': 'Nome' },\n    { name: 'activityName', 'PT-BR': 'Nome da Atividade' },\n    { name: 'inscription', 'PT-BR': 'Tipo de Inscrição' },\n    { name: 'activityInscription', 'PT-BR': 'Tipo de Inscrição da Atividade' },\n    { name: 'ALL', 'PT-BR': 'Todos inscritos' },\n    { name: 'CHOICE', 'PT-BR': 'Seleção' },\n    { name: 'users', 'PT-BR': 'Usuário' },\n    { name: 'presence', 'PT-BR': 'Presença' },\n    { name: 'true', 'PT-BR': 'Presente' },\n    { name: 'false', 'PT-BR': 'Pendente' },\n    { name: 'rga', 'PT-BR': 'RGA' },\n    { name: 'null', 'PT-BR': '' },\n    { name: 'undefined', 'PT-BR': '' },\n    { name: 'vacancies', 'PT-BR': 'Vagas Restantes' },\n    { name: 'activityVacancies', 'PT-BR': 'Vagas Restantes da Ativadade' },\n    { name: 'activeties', 'PT-BR': 'Atividades: ' },\n    { name: 'allergy', 'PT-BR': 'Intolerância/Alergia' },\n    { name: 'arrivalDate', 'PT-BR': 'Data de Chegada' },\n    { name: 'departureDate', 'PT-BR': 'Data de Saída' },\n    { name: 'contact', 'PT-BR': 'Contato' },\n    { name: 'course', 'PT-BR': 'Curso' },\n    { name: 'deficiency', 'PT-BR': 'Deficiência' },\n    { name: 'email', 'PT-BR': 'Email' },\n    { name: 'emergencyContact', 'PT-BR': 'Contanto de Emergência' },\n    { name: 'ethnicity', 'PT-BR': 'Etnia' },\n    { name: 'gender', 'PT-BR': 'Sexo' },\n    { name: 'group', 'PT-BR': 'Grupo' },\n    { name: 'type', 'PT-BR': 'Tipo de Usuário' },\n    { name: 'REGISTERED', 'PT-BR': 'Inscrito' },\n    { name: 'password', 'PT-BR': 'Senha' },\n]\n\nexport default dictionary","import download from 'downloadjs'\nimport converter from 'json-2-csv'\nimport dictionary from './dictionary'\n\nexport const hasChanges = (changes) => {\n    return changes.length === 0 ? true : false\n}\n\nexport const INITIAL_STATE = {\n    databaseDocument: '',\n    userDocument: '',\n    changes: [],\n    user: ''\n}\n\nexport const getElementOnArrayInReverse = (array, index) => {\n    var reverseArray = array.reverse()\n    return reverseArray[ index ]\n}\n\nexport const objectToArray = ( object ) => {\n    return Object.values( object )\n}\n\nexport const isoDateToShortDateWithHours = (dateObject) => {\n    let date = new Date( String( dateObject ) )\n    let dateShortFormat = date.getDay() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\n    let hours = date.getHours() + ':' + date.getMinutes()\n    return dateShortFormat + ' ' + hours\n}\n\nexport const redirectTo = (route) => {\n    window.location.replace(route)\n}\n\nexport const downloadText = (text, file, type) => {\n    download(text, file, type);\n}\n\nexport const downloadCsv = (data, name) => {\n    downloadText(data, `${name}.csv`, 'text/csv')\n}\n\nexport const replaceAll = (text, needle, replacement) => {\n    return text.split(needle).join(replacement)\n}\n\nexport const processingCsv = (csv) => {\n    csv = replaceAll(csv, '.', ' ')\n    dictionary.forEach(word => {\n        csv = replaceAll(csv, word.name, word[\"PT-BR\"])\n    })\n    return csv\n}\n\nexport const dataToCsv = (data, callback) => {\n    converter.json2csv(data, (err, csv) => {\n        if(!err)\n            csv = processingCsv(csv)\n        callback(err, csv)\n    })\n}","import { True, False, Void, Nothing } from '../constant'\nimport { objectToArray } from './document'\n\nexport const isEmail = (email) => {\n    var validEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return validEmail.test(String(email).toLowerCase());\n}\n\nexport const isPassword = (password) => {\n    var validPassword = /\\w{8,}/;\n    return validPassword.test(String(password));\n}\n\nexport const isVoid = (value) => {\n    return value === Void ? True : False\n}\n\nexport const isNothing = (value) => {\n    return value === Nothing ? True : False\n}\n\nexport const isRga = (value) => {\n    var rgaLength = 12\n    return value.length === rgaLength ? True : False\n}\n\nexport const checkForm = ( is ) => {\n    is = objectToArray( is )\n    for(var index = 0; index < is.length; index++){\n        var element = is[index]\n        if( element !== True ){\n            return false\n        }\n    }\n    return true\n}","import React from 'react'\n\nimport { True, False, Valid, Invalid, Nothing } from '../constant'\nimport { isVoid } from '../utils/auth'\n\nconst validation = (value) => {\n    return value ? True : False\n}\n\nexport const Input = (props) => {\n    var isValid = props.isValid\n    var inputValidation = validation(isValid) ? Valid : Invalid\n        inputValidation = !isVoid(isValid) ? inputValidation : Nothing\n\n    return (\n        <div className=\"form-label-group\">\n            <input \n                type={ props.type } \n                id={ props.id } \n                name={ props.id }\n                className={ \"form-control \" + inputValidation } \n                placeholder={ props.placeholder } \n                onChange={ props.onChange }\n                value={ props.value }\n                required\n            />\n            <div className=\"text-center valid-feedback\">\n                { props.validMessage }\n            </div>\n            <div className=\"text-center invalid-feedback\">\n                { props.invalidMessage }\n            </div>\n            <label htmlFor={ props.id }> { props.children } </label>\n        </div>\n    )\n}","import React from 'react'\n\nimport { False } from '../constant'\n\nexport const Submit = (props) => {\n    if( props.error === False ){\n        return (\n            <button id={ props.id } className=\"error-submit btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\n        )\n    } else {\n        return (\n            <button id={ props.id } className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"> { props.children } </button>\n        )\n    }\n}","import React from 'react'\n\nexport const Loading = (props) => {\n    if(props.isLoading){\n        return (\n            <div className=\"text-center mt-5 mb-5\">\n                <div>\n                    <i className=\"fas fa-sync fa-7x\" id=\"loading\"></i>\n                </div>\n                <div className=\"mt-4\">\n                    Carregando\n                </div>\n            </div>\n        )\n    } else {\n        return props.children\n    }\n}","//import firebase from 'firebase';\nimport firebase from 'firebase/app';\nimport 'firebase/firebase-database';\n\nvar config = {\n    apiKey: \"AIzaSyDUiBlfUjdsVpsl2GjZi9B9Evn2lIs1lqo\",\n    authDomain: \"pet-event.firebaseapp.com\",\n    databaseURL: \"https://pet-event.firebaseio.com\",\n    projectId: \"pet-event\",\n    storageBucket: \"\",\n    messagingSenderId: \"61527628241\"\n};\n\nexport const firebaseImpl = firebase.initializeApp(config);\nexport const firebaseDatabase = firebase.database();","import {firebaseDatabase} from '../utils/firebaseUtils'\n\nexport default class FirebaseService {\n\n    static getOneData = async (path, ...child) => {\n\n        var query = firebaseDatabase.ref(path)\n\n        if(child.length !== 0)\n            child.forEach((item) => {\n                query = query.child(item)\n            })\n\n        const snapshot = await query.once('value')\n        const value = snapshot.val()\n\n        return value\n    }\n\n    static listenIfChildAdded = (path, id, callback) => {\n        const query = firebaseDatabase.ref(path).child(id)\n\n        query.on(\"child_added\", callback);\n    }\n\n    static insertData = (form, path, ...child) => {\n        try {\n            var query = firebaseDatabase.ref(path)\n\n            if(child.length !== 0)\n                child.forEach((item) => {\n                    query = query.child(item)\n                })\n\n            query.set(form)\n            return true\n        } catch (error) {\n            return error\n        }\n    }\n\n    static removeData = (path, ...child) => {\n        try {\n            var query = firebaseDatabase.ref(path)\n\n            if(child.length !== 0)\n                child.forEach((item) => {\n                    query = query.child(item)\n                })\n\n            query.remove()\n            return true\n        } catch (error) {\n            return error\n        }\n    }\n\n    static updateData = (callback, path, ...child) => {\n        try {\n            var query = firebaseDatabase.ref(path)\n\n            if(child.length !== 0)\n                child.forEach((item) => {\n                    query = query.child(item)\n                })\n\n            query.transaction(callback)\n            return true\n        } catch (error) {\n            return error\n        }\n    }\n\n}","import axios from 'axios'\nexport const sendEmail = async (email, password) => {\n    try {\n        const response = await axios.get(`https://ladesp-api-test.herokuapp.com/api/email/v0/pet/${email}/${password}`);\n        return response.status\n    } catch (error) {\n        return error\n    }\n}\n\n","import FirebaseService from '../services/firebaseService'\nimport { False, True } from '../constant'\nimport md5 from 'md5'\nimport { sendEmail } from '../utils/email'\n\nexport const doLogin = async ( form ) => {\n    let user = await FirebaseService.getOneData('users', form.rga)\n    if( !user || user.password !== md5(form.password) ){\n        let error = { isSuccess: False, message: 'Email ou Password não válido'}\n        return error\n    }\n    let success = {\n        isSuccess: True,\n        data: user\n    }\n    return success\n}\n\nexport const doInscription = async ( form ) => {\n    let user = await FirebaseService.getOneData('users', form.rga)\n    if( user ){\n        let error = { isSuccess: False, message: 'RGA já cadastrado'}\n        return error\n    }\n    let isSuccess = await FirebaseService.insertData({ ...form, password: md5(form.rga) }, 'users', form.rga)\n    let success = { isSuccess: isSuccess, message: 'Cadastrado com successo.'}\n\n    if(form.email){\n        sendEmail( form.email, form.rga )\n    }\n\n    return success\n}\n\nexport const changePassword = async ( password, rga ) => {\n    try {\n        FirebaseService.updateData((user) => {\n            if(user){\n                user.password = md5(password)\n            }\n            return user\n        }, 'users', rga)\n\n        return true\n    } catch (error) {\n        return false\n    }\n}","import React, { Component } from 'react'\n\nimport { Error } from '../error'\nimport Modal from '../../shared/modal/modal'\nimport { isPassword, isRga } from '../../utils/auth'\n\nimport { True, False, Void, InitialInput } from '../../constant'\nimport { Input } from '../input'\nimport { Submit } from '../submit'\nimport { Loading } from '../../shared/loading'\nimport { doLogin } from '../auth'\nimport { Save } from '../../utils/localStorage'\n\nexport default class Login extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            loginState: {\n                isSuccess: Void,\n                message: InitialInput\n            },\n            isLoading: False,\n            isRga: Void,\n            isPassword: Void,\n            rga: InitialInput,\n            password: InitialInput,\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.rgaChange = this.rgaChange.bind(this)\n        this.passwordChange = this.passwordChange.bind(this)\n        this.LoadingOn = this.LoadingOn.bind(this)\n        this.LoadingOff = this.LoadingOff.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n        this.loginSuccess = this.loginSuccess.bind(this)\n    } \n\n    rgaChange(event){\n        var rga = event.target.value\n        this.setState({\n            rga: rga,\n            isRga: isRga(rga)\n        });\n    }\n\n    passwordChange(event){\n        var password = event.target.value\n        this.setState({\n            password: password,\n            isPassword: isPassword(password)\n        });\n    }\n\n    LoadingOn(){\n        this.setState({\n            isLoading: True\n        })\n    }\n\n    LoadingOff(){\n        this.setState({\n            isLoading: False\n        })\n    }\n\n    closeModal(){\n        var buttonClose = document.querySelector('#closelogin')\n        buttonClose.click()\n    }\n\n    loginSuccess(){\n        this.props.history.push('users')\n    }\n\n    async handleSubmit(event){\n        event.preventDefault()\n\n        this.LoadingOn()\n\n        var loginState = await doLogin({\n            rga: this.state.rga,\n            password: this.state.password\n        })\n\n        if(!loginState.isSuccess){\n            this.setState({\n                loginState: loginState,\n                isRga: Void,\n                isPassword: Void,\n            })\n        } else {\n            Save(loginState.data)\n            this.closeModal()\n            setTimeout( this.loginSuccess , 1000);\n            \n        }\n\n        setTimeout( this.LoadingOff , 3000);\n    }\n\n    render(){\n        return(\n            <Modal id=\"login\"> \n                <h3 className=\"login-heading mb-4\">Entrar</h3>\n                <form onSubmit={ this.handleSubmit }>\n\n                    <Loading isLoading={ this.state.isLoading }>\n                        <Input\n                            type=\"text\"\n                            id=\"rgaLogin\"\n                            placeholder=\"User\"\n                            onChange={ this.rgaChange }\n                        >\n                            User\n                        </Input>\n                        <Input\n                            type=\"password\"\n                            id=\"passwordLogin\"\n                            placeholder=\"Password\"\n                            onChange={ this.passwordChange }\n                            isValid={ this.state.isPassword }\n                            invalidMessage=\"Insira uma senha com no mínimo 8 caracteres\"\n                        >\n                            Senha\n                        </Input>\n                        <hr className=\"my-4\"></hr>\n                        <Error { ...this.state.loginState }/>\n                        <Submit id=\"idLogin\"> Entrarr </Submit>\n                    </Loading>\n\n                </form>\n            </Modal>\n        )\n    }\n}","import React from 'react'\n\nexport const Select = (props) => {\n    return (\n        <div>\n            <label htmlFor=\"group\"> { props.name } </label>\n            <div className=\"form-label-group rounded\">\n                <select name={ props.id } className=\"form-control\" value={ props.value } onChange={ props.onChange } id={ props.id }>\n                    { props.children }\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport const Option = (props) => {\n    return (\n        <option { ...props }> { props.children } </option>\n    )\n}","import React from 'react'\n\nexport const Textarea = (props) => {\n    return (\n        <div>\n            <label htmlFor={ props.id } className=\"mt-3\"> { props.name } </label>\n            <div className=\"form-label-group\">\n                <textarea \n                    name={ props.id }\n                    className=\"form-control\" \n                    id={ props.id } \n                    rows=\"3\" \n                    onChange={ props.onChange } \n                    value={ props.value }\n                />\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\n\nimport Modal from '../../shared/modal/modal'\nimport { Error } from '../error'\nimport { isNothing, isRga, isEmail, checkForm } from '../../utils/auth'\nimport { doInscription } from '../auth'\n\nimport { True, False, Void, InitialInput, InscriptionType } from '../../constant'\nimport { Input } from '../input'\nimport { Submit } from '../submit'\nimport { Loading } from '../../shared/loading'\nimport { Select, Option } from '../select'\nimport { Textarea } from '../textarea'\n\nexport default class Login extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            isLoading: False,\n            isSuccessSubmit: Void,\n            inscriptionState: {\n                isSuccess: Void,\n                message: InitialInput\n            },\n\n            is:{\n                isRga: Void,\n                isName: Void,\n                isEmail: Void,\n                isCourse: Void,\n                isContact: Void,\n                isEmergencyContact: Void\n            },\n\n            form: {\n                rga: InitialInput,\n                name: InitialInput,\n                email: InitialInput,\n                course: InitialInput,\n                contact: InitialInput,\n                emergencyContact: InitialInput,\n                group: 'Três Lagoas - Conexões de Saberes Matemáticos',\n                gender: 'Feminino',\n                ethnicity: 'Branco',\n                arrivalDate: '22/03/2018',\n                departureDate: '23/03/2018',\n                allergy: '',\n                deficiency: '',\n                type: InscriptionType\n            }\n        }\n\n        this.rgaChange = this.rgaChange.bind(this)\n        this.nameChange = this.nameChange.bind(this)\n        this.emailChange = this.emailChange.bind(this)\n        this.courseChange = this.courseChange.bind(this)\n        this.contactChange = this.contactChange.bind(this)\n        this.emergencyContactChange = this.emergencyContactChange.bind(this)\n        this.inputChange = this.inputChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        \n        this.LoadingOn = this.LoadingOn.bind(this)\n        this.LoadingOff = this.LoadingOff.bind(this)\n        this.submitError = this.submitError.bind(this)\n        this.submitDefault = this.submitDefault.bind(this)\n    }\n\n    inputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n            form: { ...this.state.form, [name]: value },\n        });\n    }\n\n    rgaChange(event){\n        var rga = event.target.value\n        this.setState({\n            form: { ...this.state.form, rga: rga },\n            is: { ...this.state.is, isRga: isRga(rga) }\n        });\n    }\n\n    emailChange(event){\n        var email = event.target.value\n        this.setState({\n            form: { ...this.state.form, email: email },\n            is: { ...this.state.is, isEmail: isEmail(email) }\n        });\n    }\n\n    nameChange(event){\n        var name = event.target.value\n        this.setState({\n            form: { ...this.state.form, name: name },\n            is: { ...this.state.is, isName: !isNothing(name) }\n        });\n    }\n\n    courseChange(event){\n        var course = event.target.value\n        this.setState({\n            form: { ...this.state.form, course: course },\n            is: { ...this.state.is, isCourse: !isNothing(course) }\n        });\n    }\n\n    contactChange(event){\n        var contact = event.target.value\n        this.setState({\n            form: { ...this.state.form, contact: contact },\n            is: { ...this.state.is, isContact: !isNothing(contact) }\n        });\n    }\n\n    emergencyContactChange(event){\n        var emergencyContact = event.target.value\n        this.setState({\n            form: { ...this.state.form, emergencyContact: emergencyContact },\n            is: { ...this.state.is, isEmergencyContact: !isNothing(emergencyContact) }\n        });\n    }\n\n    LoadingOn(){\n        this.setState({\n            isLoading: True\n        })\n    }\n\n    LoadingOff(){\n        this.setState({\n            isLoading: False\n        })\n    }\n\n    submitError(){\n        this.setState({\n            isSuccessSubmit: False\n        })\n    }\n\n    submitDefault(){\n        this.setState({\n            isSuccessSubmit: Void\n        })\n    }\n\n    async handleSubmit(event){\n        event.preventDefault()\n        if( !checkForm( this.state.is ) ){\n            this.submitError()\n            setTimeout( this.submitDefault, 2000)\n        } else {\n            this.LoadingOn()\n\n            let doInscriptionResponse = await doInscription( this.state.form )\n            this.setState({\n                inscriptionState: doInscriptionResponse\n            })\n\n            setTimeout( this.LoadingOff, 2000)\n        }\n    }\n\n    render(){\n        return(\n            <Modal id=\"register\"> \n                <Loading isLoading={ this.state.isLoading }>\n                    <h3 className=\"login-heading mb-4\">Inscreva-se no evento</h3>\n                    <form onSubmit={ this.handleSubmit }>\n                        <Input\n                            type=\"text\"\n                            id=\"nameInscription\"\n                            placeholder=\"Nome\"\n                            onChange={ this.nameChange }\n                            isValid={ this.state.is.isName }\n                            value={ this.state.form.name }\n                            invalidMessage=\"Insira um nome\"\n                        >\n                            Nome\n                        </Input>\n                        <Input\n                            type=\"text\"\n                            id=\"rgaInscription\"\n                            placeholder=\"Insira o seu RGA. O RGA será o seu user\"\n                            onChange={ this.rgaChange }\n                            isValid={ this.state.is.isRga }\n                            value={ this.state.form.rga }\n                            invalidMessage=\"Insira um rga válido.\"\n                        >\n                            Insira o seu RGA. O RGA será o seu user\n                        </Input>\n                        <Input\n                            type=\"email\"\n                            id=\"emailInscription\"\n                            placeholder=\"Email\"\n                            onChange={ this.emailChange }\n                            isValid={ this.state.is.isEmail }\n                            value={ this.state.form.email }\n                            invalidMessage=\"Insira um email válido\"\n                        >\n                            Email\n                        </Input>\n                        <Input\n                            type=\"text\"\n                            id=\"courseInscription\"\n                            placeholder=\"Curso\"\n                            onChange={ this.courseChange }\n                            isValid={ this.state.is.isCourse }\n                            value={ this.state.form.course }\n                            invalidMessage=\"Insira um curso\"\n                        >\n                            Curso\n                        </Input>\n\n                        <hr className=\"my-4\"></hr>\n                        <Select name=\"Grupo\" id=\"group\" value={ this.state.form.group } onChange={ this.inputChange }>\n                            <Option>Três Lagoas - Conexões de Saberes Matemáticos</Option>\n                            <Option>Três Lagoas - Geografia</Option>\n                            <Option>Três Lagoas - Enfermagem</Option>\n                            <Option>Três Lagoas - História</Option>\n                            <Option>Três Lagoas - Matemática</Option>\n\n                            <Option>Chapadão do Sul - Agronomia e Engenharia Florestal</Option>\n\n                            <Option>Campo Grande - Farmácia</Option>\n                            <Option>Campo Grande - Zootecnia</Option>\n                            <Option>Campo Grande - Química</Option>\n                            <Option>Campo Grande - Educação Física</Option>\n                            <Option>Campo Grande - Engenharia Elétrica</Option>\n                            <Option>Campo Grande - Materiais</Option>\n                            <Option>Campo Grande - Ciência da Computação</Option>\n                            <Option>Campo Grande - Sistemas</Option>\n\n                            <Option>Ponta Porã - Fronteira</Option>\n                            <Option>Ponta Porã - Conexões de Saberes Matemática</Option>\n\n                            <Option>Naviral - Pedagogia e Ciência Sociais</Option>\n                        </Select>\n                        <Select name=\"Sexo\" id=\"gender\" value={ this.state.form.gender } onChange={ this.inputChange }>\n                            <Option>Feminino</Option>\n                            <Option>Masculino</Option>\n                        </Select>\n                        <Select name=\"Etnia\" id=\"ethnicity\" value={ this.state.form.ethnicity } onChange={ this.inputChange }>\n                            <Option>Branco</Option>\n                            <Option>Negro</Option>\n                            <Option>Indígena</Option>\n                            <Option>Pardo</Option>\n                            <Option>Caboclo</Option>\n                            <Option>Cafuzo</Option>\n                        </Select>\n                        <Select name=\"Data de Chegada\" id=\"arrivalDate\" value={ this.state.form.arrivalDate } onChange={ this.inputChange }>\n                            <Option>22/03/2018</Option>\n                            <Option>23/03/2018</Option>\n                        </Select>\n                        <Select name=\"Data de Saída\" id=\"departureDate\" value={ this.state.form.departureDate } onChange={ this.inputChange }>\n                            <Option>23/03/2018</Option>\n                            <Option>24/03/2018</Option>\n                        </Select>\n\n                        <hr className=\"my-4\"></hr>\n                        <Input\n                            type=\"text\"\n                            id=\"contactInscription\"\n                            placeholder=\"Contato\"\n                            onChange={ this.contactChange }\n                            isValid={ this.state.is.isContact }\n                            value={ this.state.form.contact }\n                            invalidMessage=\"Insira um contato\"\n                        >\n                            Contato\n                        </Input>\n                        <Input\n                            type=\"text\"\n                            id=\"emergencyContactInscription\"\n                            placeholder=\"Contato de Emergência\"\n                            onChange={ this.emergencyContactChange }\n                            isValid={ this.state.is.isEmergencyContact }\n                            value={ this.state.form.emergencyContact }\n                            invalidMessage=\"Insira um contato de emergência\"\n                        >\n                            Contato de Emergência\n                        </Input>\n\n                        <hr className=\"my-4\"></hr>\n                        <Textarea id=\"allergy\" name=\"Intolerância/Alergia\" onChange={ this.inputChange } value={ this.state.form.allergy }/>\n                        <Textarea id=\"deficiency\" name=\"Necessidades Especiais\" onChange={ this.inputChange } value={ this.state.form.deficiency }/>\n\n                        <hr className=\"my-4\"></hr>\n                        <Error { ...this.state.inscriptionState }/>\n                        <Submit error={ this.state.isSuccessSubmit } id=\"idInscription\"> Inscreva-se </Submit>\n                    </form>\n                </Loading>\n            </Modal>\n        )\n    }\n}","import React from 'react'\nimport Modal from '../shared/modal/modal';\n\nconst About = () => {\n    return (\n        <Modal id=\"about\">\n            <h3 className=\"login-heading mb-4\">Sobre</h3>\n            <img className=\"w-75 mx-auto d-block\" src={ `${process.env.PUBLIC_URL}/logo.png` } alt=\"\"/>\n            <p className=\"text-justify\">\n                To Event é um sistema para controle de frequências e vagas, como também de inscrições focado em evento. \n                O sistema foi construido dentro do projeto Fábrica de Software.\n                O projeto é realizado dentro do laboratório LADESP situada na Universidade Federal de Mato Grosso do Sul de Corumbá.\n            </p>\n            <img className=\"w-100 mx-auto d-block\" src={ `${process.env.PUBLIC_URL}/logoLadesp.png` } alt=\"\"/>\n        </Modal>\n    )\n}\n\nexport default About","import React, { Component } from 'react'\n\nimport Main from '../shared/container/main'\nimport ModalButton from '../shared/modal/button'\nimport Markdown from '../shared/markdown'\nimport Login from '../auth/login'\nimport Inscription from '../auth/inscription'\nimport About from '../about';\n\nexport default class Description extends Component {\n\n    constructor(props){\n        super(props)\n\n        if(this.props.isLoggedIn){\n            if(this.props.history.location.pathname === '/')\n                this.props.history.push('users')\n            else\n                this.props.history.push('users')\n            \n        }\n    }\n\n    render(){\n        return (\n            <Main>\n                <div className=\"col-md-7 col-lg-8 bg-white rounded\"> \n                    <div className=\"text-right\">\n                        <ModalButton target=\"#login\"> Entrar </ModalButton>\n                        <ModalButton target=\"#register\"> Inscreva-se </ModalButton>\n                        <ModalButton target=\"#about\"> Sobre </ModalButton>\n                    </div>\n                    <Markdown />\n                </div>\n                <Login history={ this.props.history }/>\n                <Inscription />\n                <About/>\n            </Main>\n        )\n    }\n}","import FirebaseService from '../services/firebaseService'\n\nexport const getActiveties = async () => {\n    var activeties = await FirebaseService.getOneData('activeties')\n    return activeties\n}\n\nexport const getUserActiveties = async (rga) => {\n    var activeties = await FirebaseService.getOneData('users', rga, 'activeties')\n    return activeties\n}\n\nexport const getUsers = async () => {\n    var users = await FirebaseService.getOneData('users')\n    return users\n}\n\nexport const activityInscription = async (rga, activity, name) => {\n    var formInscription = {\n        inscription: true\n    }\n\n    var formUser = {\n        rga: rga,\n        presence: false,\n        name: name\n    }\n\n    var hasInserted = await FirebaseService.insertData(formInscription, 'users', rga, 'activeties', activity)\n\n    var activityName = activity\n    await FirebaseService.updateData((activity) => {\n        if(activity){\n            activity.vacancies--\n        }\n        return activity\n    }, 'activeties', activityName)\n\n    setTimeout(() => {\n        FirebaseService.insertData(formUser, 'activeties', activity, 'users', rga)\n    }, 1000);\n\n    return hasInserted\n}\n\nexport const removeActivityInscription = async (rga, activity) => {\n    var hasRemoved = await FirebaseService.removeData('users', rga, 'activeties', activity)\n    setTimeout(() => {\n        FirebaseService.removeData('activeties', activity, 'users', rga)\n    }, 1000);\n    return hasRemoved\n}\n\nexport const updateDecrementVacanciesActivity = async (activityName) => {\n    var hasRemoved = await FirebaseService.updateData((activity) => {\n        if(activity){\n            activity.vacancies--\n        }\n        return activity\n    }, 'activeties', activityName)\n    return hasRemoved\n}\n\nexport const updateIncrementVacanciesActivity = async (activityName) => {\n    var hasRemoved = await FirebaseService.updateData((activity) => {\n        if(activity){\n            activity.vacancies++\n        }\n        return activity\n    }, 'activeties', activityName)\n    return hasRemoved\n}\n\nexport const updateVacanciesActivity = async (activityName, vacancies) => {\n    var hasUpdated = await FirebaseService.updateData((activity) => {\n        if(activity){\n            activity.vacancies = parseInt(activity.vacancies) + parseInt(vacancies)\n        }\n        return activity\n    }, 'activeties', activityName)\n    return hasUpdated\n}","import React from 'react'\n\nexport const ListGroup = ( props ) => {\n    return (\n        <div className=\"col-md-4 p-2\">\n            <div className=\"list-group rounded shadow\" id=\"list-tab-activities\" role=\"tablist\">\n                { props.children }\n            </div>\n        </div>\n    )\n}\n\nexport const ListGroupContent = ( props ) => {\n    return (\n        <div className=\"col-md-8\">\n            <div className=\"tab-content\" id=\"nav-tabContent\">\n                { props.children }\n            </div>\n        </div>\n    )\n}\n\nexport const ListGroupContentSupport = ( props ) => {\n    return (\n        <div class=\"col-md-8\">\n            <div class=\"tab-content\" id=\"nav-tabContent\">\n                { props.children }\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport { \n    activityInscription, \n    removeActivityInscription,\n    updateIncrementVacanciesActivity\n} from '../effects'\nimport { objectToArray } from '../../utils/document'\nimport { Null } from '../../constant';\n\n\nexport const ItemGroup = ( props ) => {\n    var className = `list-group-item list-group-item-action ` + ( props.id === 0 ? 'active' : '' )\n    var itemId = `item-${props.id}`\n    var contentId = `#content-${props.id}`\n    return (\n        <a className={ className } id={ itemId } data-toggle=\"list\" href={ contentId } role=\"tab\" aria-controls=\"home\">\n            { props.title }\n            { props.hasInscription ? (<span className=\"badge badge-success badge-pill\">inscrito</span>) : null }\n        </a>\n    )\n}\n\nexport const ItemGroupContent = ( props ) => {\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\n    var itemId = `content-${props.id}`\n    \n    var inscriptionButton = props.vacancies !== 0 ? props.hasInscription ? (\n        <button type=\"button\" onClick={ \n            async () => {\n                await removeActivityInscription(props.rga, props.title) \n                await updateIncrementVacanciesActivity(props.title)\n                props.reload()\n            }\n        } className=\"btn btn-outline-danger\">Sair da atividade</button>\n    ) : (\n        <button type=\"button\" onClick={ \n            async () => {\n                await activityInscription(props.rga, props.title, props.name) \n                props.reload()\n            }\n        } className=\"btn btn-outline-primary\">Inscrever-se na atividade</button>\n    ) : null\n\n    return (\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\n            <p>{ props.description }</p>\n            <p>{ props.resume }</p>\n            <p>{ props.pergunta }</p>\n            { props.type !== \"ALL\" ? inscriptionButton : null }\n            { props.vacancies ? (\n                <div>\n                    <span className=\"badge badge-success badge-pill\"> { `Vagas: ${props.vacancies}` }</span>\n                </div>\n            ) : null }\n        </div>\n    )\n}\n\n//Support\n\nexport const ItemGroupContentSupport = (props) => {\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\n    var itemId = `content-${props.id}`\n    var users = objectToArray( props.users ? props.users : [] )\n\n    var listUsers = users.map((user, index) => {\n        return (\n            <tr key={ index }>\n                <th scope=\"row\">{ user.name }</th>\n                <td>{ user.rga }</td>\n                <td>{ user.presence === true ? 'PRESENTE' : 'PENDENTE'}</td>\n            </tr>\n        )\n    })\n\n    return (\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\n            <Link to={ `${props.match.url}/${props.activityName}/qrcode/${props.type}` } className=\"btn btn-outline-info mb-1\">Frequência</Link>\n            <div className=\"table-responsive\">\n                <table className=\"table table-sm\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">RGA</th>\n                            <th scope=\"col\">Frequência</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { listUsers }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\n\n//Administrator\nexport const ItemGroupContentAdministrator = (props) => {\n    var className = `mt-2 text-justify tab-pane fade show ` + ( props.id === 0 ? 'active' : '' )\n    var itemId = `content-${props.id}`\n    var users = objectToArray( props.users ? props.users : [] )\n\n    var listUsers = users.map((user, index) => {\n        return (\n            <tr key={ index }>\n                <th scope=\"row\">{ user.name }</th>\n                <td>{ user.rga }</td>\n                <td>{ user.presence === true ? 'PRESENTE' : 'PENDENTE'}</td>\n            </tr>\n        )\n    })\n\n    return (\n        <div className={ className } id={ itemId } role=\"tabpanel\" aria-labelledby=\"list-home-list\">\n            <span className=\"mr-1 badge badge-info\">\n                <a onClick={ () => {\n                    props.exportToCsv(users, props.activityName)\n                } } className=\"mr-1 button-none\">\n                    <i className=\"fas mr-1 fa-download\"></i>\n                    Exportar para CSV\n                </a>\n            </span>\n            { props.vacancies ? (\n                <span className=\"mr-1 badge badge-info\">Vagas: { props.vacancies }</span>\n            ) : Null }\n            <span className=\"mr-1 badge badge-success\">Inscritos: { users.length }</span>\n            { props.vacancies ? (\n                <span className=\"mr-1 badge badge-info\">\n                    <a onClick={ () => {\n                        props.handleActivity(props.activityName)\n                    } } className=\"mr-1 button-none\" data-toggle=\"modal\" data-target=\"#plusVacancyModal\">\n                        <i className=\"fas mr-1 fa-plus\"></i>\n                        Editar Vagas\n                    </a>\n                </span>\n            ) : Null }\n            \n            <div className=\"table-responsive\">\n                <table className=\"table table-sm\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">RGA</th>\n                            <th scope=\"col\">Frequência</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { listUsers }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\n\nimport { LoadApplicationState } from '../utils/localStorage'\nimport { objectToArray } from '../utils/document'\nimport { getActiveties, getUserActiveties } from './effects'\n\n\nimport { ListGroup, ListGroupContent } from './list/list'\nimport { ItemGroup, ItemGroupContent } from './list/item'\n\nexport default class ActivetiesRegistered extends Component {\n    constructor(props){\n        \n        super(props)\n        this.state = {\n            user: LoadApplicationState()\n        }\n\n        this.renderActivies = this.renderActivies.bind(this)\n        this.reload = this.reload.bind(this)\n    }\n\n    async componentWillMount(){\n        this.setState({\n            activeties: objectToArray(await getActiveties()),\n            myActiveties: await getUserActiveties(this.state.user.rga)\n        })\n    }\n\n    async reload(){\n        this.setState({\n            activeties: objectToArray(await getActiveties()),\n            myActiveties: await getUserActiveties(this.state.user.rga)\n        })\n    }\n\n    renderActivies(){\n        if(!this.state.activeties)\n            return null\n        \n        var hasActiveties = !this.state.myActiveties ? false : true\n        const itemGroup = this.state.activeties.map((activity, index) => {\n\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\n\n            return (\n                <ItemGroup \n                    key={ index }\n                    title={ activity.name }\n                    id={ index }\n                    hasInscription={ hasInscription } \n                />\n            )\n        });\n\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\n            \n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\n\n            return (\n                <ItemGroupContent \n                    key={ index }\n                    title={ activity.name }\n                    description={ activity.description }\n                    resume={ activity.resume }\n                    pergunta={ activity.pergunta }\n                    id={ index }\n                    vacancies={ activity.vacancies }\n                    hasInscription={ hasInscription }\n                    rga={ this.state.user.rga }\n                    reload={ this.reload }\n                    type={ activity.inscription }\n                    name={ this.state.user.name }\n                />\n            )\n        });\n\n        return (\n            <div className=\"mt-2 mb-2 p-3\">\n                <div className=\"row\">\n                    <ListGroup>\n                        { itemGroup }\n                    </ListGroup>\n                    <ListGroupContent>\n                        { itemGroupContent }\n                    </ListGroupContent>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        return this.renderActivies()\n    }\n}","import React, { Component } from 'react'\n\nimport { LoadApplicationState } from '../utils/localStorage'\nimport { objectToArray } from '../utils/document'\nimport { getActiveties, getUserActiveties } from './effects'\n\n\nimport { ListGroup, ListGroupContent } from './list/list'\nimport { ItemGroup, ItemGroupContentSupport } from './list/item'\n\nexport default class ActivetiesSupport extends Component {\n    constructor(props){\n        \n        super(props)\n        this.state = {\n            user: LoadApplicationState()\n        }\n\n        this.renderActivies = this.renderActivies.bind(this)\n        this.reload = this.reload.bind(this)\n    }\n\n    async componentWillMount(){\n        this.setState({\n            activeties: objectToArray(await getActiveties()),\n            myActiveties: await getUserActiveties(this.state.user.rga)\n        })\n    }\n\n    async reload(){\n        this.setState({\n            activeties: objectToArray(await getActiveties()),\n            myActiveties: await getUserActiveties(this.state.user.rga)\n        })\n    }\n\n    renderActivies(){\n        if(!this.state.activeties)\n            return null\n        \n        var hasActiveties = !this.state.myActiveties ? false : true\n        const itemGroup = this.state.activeties.map((activity, index) => {\n\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\n\n            return (\n                <ItemGroup \n                    key={ index }\n                    title={ activity.name }\n                    id={ index }\n                    hasInscription={ hasInscription } \n                />\n            )\n        });\n\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\n            \n            return (\n                <ItemGroupContentSupport \n                    key={ index }\n                    id={ index }\n                    vacancies={ activity.vacancies }\n                    users={ activity.users }\n                    activityName={ activity.name }\n                    match={ this.props.match }\n                    type={ activity.inscription }\n                />\n            )\n        });\n\n        return (\n            <div className=\"mt-2 mb-2 p-3\">\n                <div className=\"row\">\n                    <ListGroup>\n                        { itemGroup }\n                    </ListGroup>\n                    <ListGroupContent>\n                        { itemGroupContent }\n                    </ListGroupContent>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        return this.renderActivies()\n    }\n}","import React, { Component } from 'react'\n\nimport { LoadApplicationState } from '../utils/localStorage'\nimport { objectToArray } from '../utils/document'\nimport { getActiveties, getUserActiveties, getUsers } from './effects'\nimport { dataToCsv, downloadCsv } from '../utils/document'\n\n\nimport { ListGroup, ListGroupContent } from './list/list'\nimport { ItemGroup, ItemGroupContentAdministrator } from './list/item'\nimport { Nothing, False, InscriptionType } from '../constant';\n\nexport default class ActivetiesAdministrator extends Component {\n    constructor(props){\n        \n        super(props)\n        this.state = {\n            user: LoadApplicationState(),\n            activitySelected: Nothing\n        }\n\n        this.renderActivies = this.renderActivies.bind(this)\n        this.reload = this.reload.bind(this)\n        this.exportUsersToCsv = this.exportUsersToCsv.bind(this)\n        this.exportToCsv = this.exportToCsv.bind(this)\n\n    }\n\n    async componentWillMount(){\n        this.setState({\n            activeties: objectToArray(await getActiveties()),\n            myActiveties: await getUserActiveties(this.state.user.rga)\n        })\n    }\n\n    async reload(){\n        this.props.reload(False)\n        this.setState({\n            activeties: objectToArray(await getActiveties()),\n            myActiveties: await getUserActiveties(this.state.user.rga)\n        })\n    }\n\n    async exportUsersToCsv(){\n        var users = objectToArray(await getUsers())\n        var usersFormated = []\n\n        users.forEach((user) => {\n            if(user.type === InscriptionType){\n                usersFormated.push({\n                    ...user,\n                    password: ''\n                })\n            }\n        })\n\n        dataToCsv(usersFormated, (err, csv) => {\n            downloadCsv(csv, 'Inscritos')\n        })\n    }\n\n    async exportToCsv(data, filename){\n        dataToCsv(data, (err, csv) => {\n            downloadCsv(csv, filename)\n        })\n    }\n\n    renderActivies(){\n        if(!this.state.activeties)\n            return null\n        \n        var hasActiveties = !this.state.myActiveties ? false : true\n        const itemGroup = this.state.activeties.map((activity, index) => {\n\n            var hasInscription = hasActiveties ? this.state.myActiveties[activity.name] ? true : false : false\n\n            return (\n                <ItemGroup \n                    key={ index }\n                    title={ activity.name }\n                    id={ index }\n                    hasInscription={ hasInscription } \n                />\n            )\n        });\n\n        const itemGroupContent = this.state.activeties.map((activity, index) => {\n            \n            return (\n                <ItemGroupContentAdministrator\n                    exportToCsv={ this.exportToCsv }\n                    handleActivity={ this.props.handleActivity } \n                    key={ index }\n                    id={ index }\n                    vacancies={ activity.vacancies }\n                    users={ activity.users }\n                    activityName={ activity.name }\n                    match={ this.props.match }\n                    type={ activity.inscription }\n                />\n            )\n        });\n\n        return (\n            <div className=\"mt-2 mb-2 p-3\">\n                <div className=\"row\">\n                    <ListGroup>\n                        <a onClick={ this.exportUsersToCsv } className=\"btn btn-outline-info mb-1\">Exportar Inscritos</a>\n                        { itemGroup }\n                    </ListGroup>\n                    <ListGroupContent>\n                        { itemGroupContent }\n                    </ListGroupContent>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        if(this.props.reloadingPage){\n            this.reload()\n        }\n        \n        return this.renderActivies()\n    }\n}","import React from 'react'\n\nimport { LoadApplicationState } from '../utils/localStorage'\n\nconst ShowQrCode = (props) => {\n    var user = LoadApplicationState()\n    return (\n        <div className=\"mt-2 mb-2 p-3\">\n            <div className=\"row justify-content-center\">\n                <div className=\"card col-lg-5 col-md-8 col-sm-8\">\n                    <img \n                        className=\"card-img-top\" \n                        src={ `https://chart.googleapis.com/chart?cht=qr&chl=${user.rga}&chs=180x180&choe=UTF-8&chld=L|2` } \n                    />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Código de Frequência</h5>\n                        <p className=\"card-text text-justify\">Antes de entrar na sala da atividade, mostre para o supervisor o código acima.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ShowQrCode","import React, { Component } from 'react'\n\nimport Modal from '../../shared/modal/modal'\nimport { Error } from '../error'\nimport { changePassword } from '../auth'\n\nimport { Loading } from '../../shared/loading'\nimport { Input } from '../input'\nimport { Submit } from '../submit'\nimport { Null, False, True, Nothing } from '../../constant';\nimport { LoadApplicationState } from '../../utils/localStorage';\n\n\nexport default class ChangePassword extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            changePasswordState: {\n                isSuccess: Null,\n                message: Nothing\n            },\n            isLoading: False,\n            rga: LoadApplicationState().rga\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.inputChange = this.inputChange.bind(this)\n        this.LoadingOn = this.LoadingOn.bind(this)\n        this.LoadingOff = this.LoadingOff.bind(this)\n    }\n\n    LoadingOn(){\n        this.setState({\n            isLoading: True\n        })\n    }\n\n    LoadingOff(){\n        this.setState({\n            isLoading: False\n        })\n    }\n\n    inputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n            form: { ...this.state.form, [name]: value },\n        });\n    }\n\n    async handleSubmit(event){\n        event.preventDefault()\n\n        if(this.state.form.newPassword.length < 8 || this.state.form.newPasswordConfirmation < 8){\n            this.setState({\n                changePasswordState: {\n                    isSuccess: False,\n                    message: 'Insira uma senha com no mínimo 8 caracteres'\n                }\n            })\n\n            return false\n        }\n\n        if(this.state.form.newPassword !== this.state.form.newPasswordConfirmation){\n            this.setState({\n                changePasswordState: {\n                    isSuccess: False,\n                    message: 'As senha não se correspondem'\n                }\n            })\n            return false\n        }\n\n        this.LoadingOn()\n\n        var hasUpdated = await changePassword(this.state.form.newPassword, this.state.rga)\n        if(hasUpdated){\n            this.setState({\n                changePasswordState: {\n                    isSuccess: True,\n                    message: 'A Senha foi mudada'\n                }\n            })\n        } else {\n            this.setState({\n                changePasswordState: {\n                    isSuccess: True,\n                    message: 'Houve algum erro...'\n                }\n            })\n        }\n\n        setTimeout( this.LoadingOff , 1500);\n    }\n\n    render(){\n        return (\n            <Modal id=\"changePassword\"> \n                <h3 className=\"login-heading mb-4\">Login</h3>\n                <form onSubmit={ this.handleSubmit }>\n                    <Loading isLoading={ this.state.isLoading }>\n                        <Input\n                            type=\"password\"\n                            id=\"newPassword\"\n                            placeholder=\"Insira uma senha com no mínimo 8 caracteres\"\n                            onChange={ this.inputChange }\n                            invalidMessage=\"Insira um rga válido\"\n                        >\n                            Senha\n                        </Input>\n                        <Input\n                            type=\"password\"\n                            id=\"newPasswordConfirmation\"\n                            placeholder=\"Repita a senha\"\n                            onChange={ this.inputChange }\n                        >\n                            Repita a senha\n                        </Input>\n                        <hr className=\"my-4\"></hr>\n                        <Error { ...this.state.changePasswordState }/>\n                        <Submit id=\"idChangePassword\"> Trocar Senha </Submit>\n                    </Loading>\n                </form>\n            </Modal>\n        )\n    }\n}","import FirebaseService from '../services/firebaseService'\nimport { True, False } from '../constant';\n\nexport const presence = async (activityName, rga, activityType) => {\n    const user = await FirebaseService.getOneData('users', rga)\n\n    if(!user)\n        return False\n\n    if(activityType === 'ALL'){\n\n        var form = {\n            rga: user.rga,\n            presence: true,\n            name: user.name\n        }\n\n        return FirebaseService.insertData(form, 'activeties', activityName, 'users', user.rga)\n        \n    }\n\n    const isSuccess = await FirebaseService.updateData((inscription) => {\n        if(inscription){\n            inscription.presence = true\n        }\n        return inscription\n    }, 'activeties', activityName, 'users', rga)\n    console.log(isSuccess)\n\n    return True\n} ","import React, { Component } from 'react'\n\nimport QrReader from \"react-qr-reader\";\nimport { Error } from '../auth/error'\n\nimport { Loading } from '../shared/loading'\nimport { False, True, Void, InitialInput } from '../constant';\nimport { presence } from './effects'\n\nexport default class Reader extends Component {\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            presenceState: {\n                isSuccess: Void,\n                message: InitialInput\n            },\n            activityName: this.props.match.params.activity,\n            activityType: this.props.match.params.type,\n            delay: 500,\n            isLoading: False,\n            startPresence: False\n        }\n\n        this.handleScan = this.handleScan.bind(this)\n    }\n\n    async handleScan(data) {\n        if (data && !this.state.startPresence) {\n            this.setState({\n                isLoading: True,\n                startPresence: True\n            })\n\n            var isSuccess = await presence(this.state.activityName, data, this.state.activityType)\n            var presenceState = isSuccess ? {\n                isSuccess: True,\n                message: 'Presença realizada'\n            } : {\n                isSuccess: False,\n                message: 'Erro ao realizar a presença'\n            }\n\n            setTimeout(() => {\n                this.setState({\n                    isLoading: False,\n                    presenceState: presenceState,\n                    startPresence: False\n                })\n            }, 1500);\n        }\n    }\n    \n    handleError(err) {\n        console.error(err);\n    }\n\n    render(){\n        return (\n            <div className=\"mt-2 mb-2 p-3\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"card col-lg-5 col-md-8 col-sm-8\">\n                        <Loading isLoading={ this.state.isLoading }>\n                            <QrReader\n                                delay={this.state.delay}\n                                onError={this.handleError}\n                                onScan={this.handleScan}\n                                style={{ width: \"100%\" }}\n                            />\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Leitor de Frequência</h5>\n                                <p className=\"card-text text-justify\">\n                                    Coloque o leitor em frente do código do inscrito. Quando for reconhecido, será alertado se a frequência foi efetuada ou se deu erro.\n                                </p>\n                            </div>\n                            <Error { ...this.state.presenceState }/>\n                        </Loading>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport Modal from '../../shared/modal/modal'\nimport { Error } from '../../auth/error'\nimport { Loading } from '../../shared/loading'\nimport { Input } from '../../auth/input'\nimport { Submit } from '../../auth/submit'\n\nimport { Null, Nothing, False, True } from '../../constant'\nimport { updateVacanciesActivity } from '../effects'\n\nexport default class PlusVacancy extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            changeVacancyState: {\n                isSuccess: Null,\n                message: Nothing\n            },\n            isLoading: False,\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.inputChange = this.inputChange.bind(this)\n        this.LoadingOn = this.LoadingOn.bind(this)\n        this.LoadingOff = this.LoadingOff.bind(this)\n    }\n\n    LoadingOn(){\n        this.setState({\n            isLoading: True\n        })\n    }\n\n    LoadingOff(){\n        this.setState({\n            isLoading: False\n        })\n    }\n\n    inputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n            form: { ...this.state.form, [name]: value },\n        });\n    }\n\n    async handleSubmit(event){\n        event.preventDefault()\n\n        this.LoadingOn()\n\n        var hasUpdated = await updateVacanciesActivity(this.props.activityName, this.state.form.plusVacancy)\n\n        if(hasUpdated){\n            this.setState({\n                changeVacancyState: {\n                    isSuccess: True,\n                    message: 'As vagas foram atualizadas'\n                }\n            })\n        } else {\n            this.setState({\n                changeVacancyState: {\n                    isSuccess: False,\n                    message: 'Aconteceu algum erro'\n                }\n            })\n        }\n        \n        this.props.reload()\n\n        setTimeout( this.LoadingOff , 1500);\n    }\n\n    render(){\n        return (\n            <Modal id=\"plusVacancyModal\"> \n                <h3 className=\"login-heading mb-4\">Aumentar Vagas</h3>\n                <form onSubmit={ this.handleSubmit }>\n                    <Loading isLoading={ this.state.isLoading }>\n                        <Input\n                            type=\"number\"\n                            id=\"plusVacancy\"\n                            placeholder=\"Mais Vagas\"\n                            onChange={ this.inputChange }\n                        >\n                            Mais Vagas\n                        </Input>\n                        <hr className=\"my-4\"></hr>\n                        <Error { ...this.state.changeVacancyState }/>\n                        <Submit id=\"submitPlusVacancy\"> Salvar </Submit>\n                    </Loading>\n                </form>\n            </Modal>\n        )\n    }\n}","import FirebaseService from '../services/firebaseService'\nimport { objectToArray } from '../utils/document'\n\nexport const getSupportUsers = async () => {\n    var users = await FirebaseService.getOneData('users')\n\n    if(!users)\n        return []\n\n    users = objectToArray(users)\n\n    var supportUsers = users.filter((user) => user.type === 'SUPPORT')\n\n    return supportUsers\n}\n\nexport const deleteSupportUsers = async (rga) => {\n    var hasRemoved = await FirebaseService.removeData('users', rga)\n\n    return hasRemoved\n}","import React, { Component } from 'react'\n\nimport { getSupportUsers, deleteSupportUsers } from './effects'\nimport { False } from '../constant';\n\nexport default class SupportList extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            supportUsers: []\n        }\n\n        this.loadSupportUsers = this.loadSupportUsers.bind(this)\n        this.deleteSupportUser = this.deleteSupportUser.bind(this)\n        this.renderSupportUsers = this.renderSupportUsers.bind(this)\n        this.reload = this.reload.bind(this)\n    }\n\n    async loadSupportUsers(){\n        this.setState({\n            supportUsers: await getSupportUsers()\n        })\n    }\n\n    reload(){\n        this.props.reload(False)\n        this.loadSupportUsers()\n    }\n\n    componentDidMount(){\n        this.loadSupportUsers()\n    }\n\n    async deleteSupportUser(rga){\n        await deleteSupportUsers(rga)\n        this.reload()\n    }\n\n    renderSupportUsers(){\n        const supportUsers = this.state.supportUsers.map((user, index) => {\n            return (\n                <tr key={ index }>\n                    <td scope=\"row\">{ user.name }</td>\n                    <td>{ user.rga }</td>\n                    <td>\n                        <a onClick={ () => this.deleteSupportUser(user.rga) } className=\"btn btn-outline-danger mb-1\">Excluir</a>\n                    </td>\n                </tr>\n            )\n        })\n\n        return supportUsers\n    }\n\n    render(){\n        if(this.props.reloadingPage){\n            this.reload()\n        }\n        return (\n            <div className=\"mt-2 mb-2 p-3\">\n                <h1> Time de Suporte </h1>\n                <div>\n                    <span className=\"badge badge-info mr-1\">Time de apoio: { this.state.supportUsers.length }</span>\n                    <span className=\"badge badge-info mr-1\">\n                        <a className=\"button-none\" data-toggle=\"modal\" data-target=\"#createSupportUser\">\n                            <i className=\"fas fa-plus\"></i>\n                            Adicionar\n                        </a>\n                    </span>\n                </div>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-sm\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Nome</th>\n                                <th scope=\"col\">RGA</th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { this.renderSupportUsers() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\r\n\r\nimport Modal from '../../shared/modal/modal'\r\nimport { Error } from '../error'\r\nimport { doInscription } from '../auth'\r\n\r\nimport { Loading } from '../../shared/loading'\r\nimport { Input } from '../input'\r\nimport { Submit } from '../submit'\r\nimport { Null, False, True, Nothing } from '../../constant';\r\n\r\n\r\nexport default class SupportUserInscription extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            changeSupportUserInscriptionState: {\r\n                isSuccess: Null,\r\n                message: Nothing\r\n            },\r\n            form: {\r\n                type: 'SUPPORT'\r\n            },\r\n            isLoading: False,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.inputChange = this.inputChange.bind(this)\r\n        this.LoadingOn = this.LoadingOn.bind(this)\r\n        this.LoadingOff = this.LoadingOff.bind(this)\r\n    }\r\n\r\n    LoadingOn(){\r\n        this.setState({\r\n            isLoading: True\r\n        })\r\n    }\r\n\r\n    LoadingOff(){\r\n        this.setState({\r\n            isLoading: False\r\n        })\r\n    }\r\n\r\n    inputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        this.LoadingOn()\r\n\r\n        var hasSuccess = await doInscription(this.state.form)\r\n        if(hasSuccess.isSuccess){\r\n            this.setState({\r\n                changeSupportUserInscriptionState: {\r\n                    isSuccess: True,\r\n                    message: 'Criado com successo o usuário'\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                changeSupportUserInscriptionState: {\r\n                    isSuccess: False,\r\n                    message: 'Houve um erro ao criar o usuário'\r\n                }\r\n            })\r\n        }\r\n\r\n        this.props.reload()\r\n\r\n        setTimeout( this.LoadingOff , 1500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal id=\"createSupportUser\"> \r\n                <h3 className=\"login-heading mb-4\">Novo Usuário de Apoio</h3>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <Loading isLoading={ this.state.isLoading }>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            placeholder=\"Insira um nome\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            Nome\r\n                        </Input>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"rga\"\r\n                            placeholder=\"Insira um rga\"\r\n                            onChange={ this.inputChange }\r\n                        >\r\n                            RGA\r\n                        </Input>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <Error { ...this.state.changeSupportUserInscriptionState }/>\r\n                        <Submit id=\"idCreateSupportUser\"> Salvar </Submit>\r\n                    </Loading>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport {Route, Link, Redirect } from \"react-router-dom\";\n\nimport Main from '../shared/container/main'\nimport ActivetiesRegistered from '../activeties/registered'\nimport ActivetiesSupport from '../activeties/support'\nimport ActivetiesAdministrator from '../activeties/administrator'\nimport ShowQrCode from '../qrCode/show'\nimport ChangePassword from \"../auth/changePassword\";\nimport Reader from '../qrCode/reader'\nimport PlusVacancy from '../activeties/plusVacancy/plusVacancy'\nimport SupportList from '../supportList/supportList'\nimport SupportUserInscription from '../auth/supportUserInscription'\n\n\nimport { RemoveApplicationState, LoadApplicationState } from '../utils/localStorage'\nimport { Nothing, False, True } from \"../constant\";\n\nexport default class UserRoute extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            quit: false,\n            user: LoadApplicationState(),\n            activitySelected: Nothing,\n            reload: False\n        }\n\n        this.registered = this.registered.bind(this)\n        this.support = this.support.bind(this)\n        this.administrator = this.administrator.bind(this)\n        this.quit = this.quit.bind(this)\n        this.handleActivity = this.handleActivity.bind(this)\n        this.reload = this.reload.bind(this)\n    }\n\n    reload(reload = True){\n        this.setState({\n            reload: reload\n        })\n    }\n\n    handleActivity(activity){\n        this.setState({\n            activitySelected: activity\n        })\n    }\n\n    quit(){\n        RemoveApplicationState()\n        this.props.reload()\n        this.setState({\n            quit: true\n        })\n    }\n\n    registered(){\n        return (\n            <Main>\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        \n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/myQrCode`}>Código de Frequência</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <Route path={`${this.props.match.path}activeties`} exact render={\n                        (props) => <ActivetiesRegistered user={ this.props.user } {...props}/>\n                    }/>\n                    <Route path={`${this.props.match.path}myQrCode`} render={\n                        (props) => <ShowQrCode {...props}/>\n                    }/>\n                </div>\n                <ChangePassword/>\n            </Main>\n        )\n    }\n\n    support(){\n        return (\n            <Main>\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        \n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <Route path={`${this.props.match.path}activeties`} exact render={\n                        (props) => <ActivetiesSupport user={ this.props.user } {...props}/>\n                    }/>\n                    <Route path={`${this.props.match.path}activeties/:activity/qrcode/:type`} render={\n                        (props) => <Reader user={ this.props.user } { ...props }/>\n                    } />\n\n                </div>\n                <ChangePassword/>\n            </Main>\n        )\n    }\n\n    administrator(){\n        return (\n            <Main>\n                <div className=\"col-md-10 col-lg-8 bg-white rounded\"> \n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mt-2 rounded shadow \">\n                        <Link className=\"navbar-brand\" to={`${this.props.match.url}/activeties`}>PET EVENTO</Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        \n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/activeties`}>Atividades</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to={`${this.props.match.url}/newSupport`}>Time de Suporte</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" data-toggle=\"modal\" data-target=\"#changePassword\">Mudar Senha</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a onClick={ this.quit } className=\"nav-link\">Sair</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <Route path={`${this.props.match.path}activeties`} exact render={\n                        (props) => <ActivetiesAdministrator\n                            reload={ this.reload }\n                            reloadingPage={ this.state.reload }\n                            handleActivity={ this.handleActivity } \n                            user={ this.props.user } \n                            {...props}\n                        />\n                    }/>\n                    <Route path={`${this.props.match.path}newSupport`} render={\n                        (props) => <SupportList \n                            user={ this.props.user } \n                            { ...props }\n                            reload={ this.reload }\n                            reloadingPage={ this.state.reload }\n                        />\n                    } />\n\n                </div>\n                <ChangePassword/>\n                <PlusVacancy reload={ this.reload } activityName={ this.state.activitySelected }/>\n                <SupportUserInscription reload={ this.reload }/>\n            </Main>\n        )\n    }\n\n    render(){\n        if(this.state.quit)\n            return <Redirect to={{\n                pathname: \"/ToEvent/\",\n            }}/>\n        \n        switch(this.state.user.type){\n            case \"REGISTERED\":\n                return this.registered()\n            case \"SUPPORT\":\n                return this.support()\n            case \"ADMINISTRATOR\":\n                return this.administrator()\n        }\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { LoadApplicationState } from '../utils/localStorage'\n\nimport Description from '../description'\nimport UserRoute from './user'\n\nclass Router extends Component {\n\n  constructor(props){\n    super(props)\n    this.loadData = this.loadData.bind(this)\n    this.reload = this.reload.bind(this)\n\n    this.loadData()\n\n    console.log('V 1.0')\n  }\n\n  loadData(){\n    var data = LoadApplicationState()\n    this.state = {\n      isLoggedIn: data ? true : false,\n      user: data\n    }\n  }\n\n  reload(){\n    var data = LoadApplicationState()\n    this.setState({\n      isLoggedIn: data ? true : false,\n      user: data\n    })\n  }\n\n  render() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/ToEvent/\" exact={true} render={ \n                  (props) => <Description isLoggedIn={ this.state.isLoggedIn } {...props} /> \n                }/>\n\n                <Route path=\"/users/\" render={ \n                  (props) => <UserRoute reload={ this.reload } user={ this.state.user } {...props}/>\n                }/>           \n                \n                <Route path='*' render={ \n                  (props) => <Description isLoggedIn={ this.state.isLoggedIn } {...props} /> \n                }/>\n            </Switch>\n        </ BrowserRouter>\n    );\n  }\n\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Router from './route/route'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router/>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}